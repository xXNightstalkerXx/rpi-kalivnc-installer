#! /bin/bash

# General Directory Declarations
INSTALL_DIR="/etc/rpi-vnc"
SCRIPTS_DIR="/usr/bin"
VNC_SERVER_DIR="/home/$USER/.vnc"
UNINSTALL="/usr/bin/rpi-vnc-uninstaller"
INITD="/etc/init.d/vncserver"

# System File Declarations
OS_RELEASE_TXT="/etc/os-release"									# used to get the currently running OS Information
ISSUE_TXT="/boot/firmware/issue.txt"								# used to get Stage information (Lite, GUI or GUI Full), just used on Debian Bookworm for Raspberry
MODEL_TXT="/sys/firmware/devicetree/base/model"						# used to get the Raspberry Pi Model (PI 4, PI 3 etc.)
COMPATIBLE_TXT="/sys/firmware/devicetree/base/compatible"			# used to get Chipset Information (needed to get correct EEPROM Firmware)

# Color Declarations
std=$(tput setaf 15)
red=$(tput setaf 9 bold)
#green=$(tput setaf 10 bold)
#yellow=$(tput setaf 11 bold)
#pink=$(tput setaf 57)
blue=$(tput setaf 27 bold)

# Function Declarations
get_system_data () {
	OP_SYSTEM=$(grep -E '^(NAME)=' /etc/os-release)
	OP_SYSTEM=$(echo "$OP_SYSTEM" | grep -oP '"\K[^"]*(?=")')
	OS_VERSION_NAME=$(grep -E '^(VERSION_CODENAME)=' /etc/os-release)
	OS_VERSION_NAME=${OS_VERSION_NAME#*=}
	OS_VERSION_ID=$(grep -E '^(VERSION_ID)=' /etc/os-release)
	OS_VERSION_ID=$(echo "$OS_VERSION_ID" | grep -oP '"\K[^"]*(?=")')
	OS_BIT=$(getconf LONG_BIT)
	HW_MODEL=$(cat $MODEL_TXT | tr -d '\0')
	HW_CHIP=$(grep -oaE '[^,]+$' $COMPATIBLE_TXT | tr -d '\0')
}

print_system_data () {
	echo "${blue}Operating System:${std} \"$OP_SYSTEM $OS_VERSION_ID ($OS_VERSION_NAME), $OS_BIT-bit\""
	echo "${blue}Hardware:${std} $HW_MODEL with $HW_CHIP Chipset"
}

# Main Script
echo ""
echo ""
echo "${blue}//      //   ///     //   //////////${std}"
echo "${blue}//     //   ////    //   //${std}"
echo "${blue}//    //   // //   //   //${std}"
echo "${blue}//   //   //  //  //   //${std}"
echo "${blue}//  //   //   // //   //${std}"
echo "${blue}// //   //    ////   //${std}"
echo "${blue}////   //     ///   ///////////${std}"
echo "RPI X11 VNC Uninstaller by Nightstalker"
echo ""
echo ""
echo "${blue}Checking OS...${std}"
os_type="$(grep -E '^(NAME)=' /etc/os-release)"
os_type=${os_type#*=}

if [[ "$os_type" == *"Kali"* ]]
then
	echo ""
	echo "$os_type"
else
	echo ""
	echo "${red}Wrong Operating System detected! Aborting to Uninstall!${std}"
	sleep 1
	exit 1
fi

echo ""
echo "${blue}Operating System okay! Continuing to Uninstall!${std}"
sleep 1

echo ""
echo ""
echo "${blue}Uninstalling the VNC Server...${std}"
echo ""
echo "${blue}Purging X11 VNC from the System...${std}"
sudo apt-get purge x11vnc -y
echo "${blue}Deleting leftover User Directory $VNC_SERVER_DIR ...${std}"
sudo rm -d -r "${VNC_SERVER_DIR}"
echo "${blue}Deleting $INITD ...${std}"
sudo rm $INITD
echo ""
echo "${blue}VNC Server successfully uninstalled! Continuing to Uninstall!${std}"
sleep 1

echo ""
echo ""
echo "${blue}Checking Directories...${std}"
echo ""
echo "${blue}Checking Installation Directory...${std}"
echo "$INSTALL_DIR"
if [ -d "$INSTALL_DIR" ]
then
    echo "${blue}Installation Directory exists. Deleting this Directory!${std}"
    sudo rm -d -r $INSTALL_DIR
else
    echo "${red}Installation Directory doesn't exist. Not able to delete!${std}"
fi
echo ""
echo "${blue}Directories sucessfully deleted! Continuing to Uninstall!${std}"
sleep 1

echo ""
echo ""
echo "${blue}Deleting Script Files in ${SCRIPTS_DIR} Directory...${std}"
echo ""
echo "${blue}Switching into Directory...${std}"
echo "$SCRIPTS_DIR"
cd $SCRIPTS_DIR
echo ""
echo "${blue}Purging myself now!${std}"
sleep 1

echo ""
echo ""
echo "${blue}Uninstall completed, Good bye!${std}"
echo ""
sudo rm $UNINSTALL
